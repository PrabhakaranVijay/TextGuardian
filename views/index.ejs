<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Text Moderation Tool</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        /* Loading Popup */
        #loadingPopup {
            position: fixed;
            inset: 0;
            background: rgba(0, 0, 0, 0.7);
            display: flex;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            display: none;
        }

        .loading-box {
                background: linear-gradient(
                    135deg,
                    rgba(255, 255, 255, 0.3),
                    rgba(255, 255, 255, 0.3)
                );
                -webkit-backdrop-filter: blur(10px);
                backdrop-filter: blur(10px);
                border-radius: 20px;
                border: transparent;
                box-shadow: 0 8px 32px rgba(0, 0, 0, 0.37);
                padding: 20px;
                text-align: center;
                width: 200px;
            }
        
        /* Loader Animation */
        .loader {
            width: 45px;
            aspect-ratio: 1;
            --c: no-repeat linear-gradient(#3498db 0 0);
            background: var(--c), var(--c), var(--c);
            animation: l15-1 1s infinite, l15-2 1s infinite;
        }

        @keyframes l15-1 {
            0%, 100% { background-size: 20% 100%; }
            33%, 66% { background-size: 20% 40%; }
        }

        @keyframes l15-2 {
            0%, 33% { background-position: 0 0, 50% 100%, 100% 100%; }
            66%, 100% { background-position: 100% 0, 0 100%, 50% 100%; }
        }

    </style>
    
</head>
<body class="min-h-screen flex flex-col bg-gray-100 dark:bg-gray-900 transition-colors duration-300">
    <!-- Age verification overlay -->
    <div id="age-verification" class="fixed inset-0 bg-black bg-opacity-70 flex items-center justify-center z-50">
        <div class="bg-white dark:bg-gray-800 p-8 rounded-lg shadow-lg max-w-md w-full">
            <h2 class="text-2xl font-bold mb-4 text-gray-800 dark:text-white">Age Verification</h2>
            <p class="mb-6 text-gray-600 dark:text-gray-300">This website contains content related to content moderation that may not be suitable for minors. Please confirm that you are at least 18 years of age.</p>
            <div class="flex justify-end space-x-4">
                <button id="reject-btn" class="px-4 py-2 bg-gray-300 dark:bg-gray-700 text-gray-800 dark:text-white rounded hover:bg-gray-400 dark:hover:bg-gray-600 transition-colors">Exit</button>
                <button id="confirm-btn" class="px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700 transition-colors">I am 18 or older</button>
            </div>
        </div>
    </div>

    <!-- Navbar -->
    <nav class="bg-white dark:bg-gray-800 shadow-md">
        <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex justify-between h-16">
                
                <div class="flex-1 flex items-center justify-start">
                    <a href="/" class="text-lg font-semibold text-gray-800 dark:text-white">Home</a>
                </div>
               
                <div class="flex-1 flex items-center justify-center">
                    <a href="/" class="flex items-center">
                        <span class="text-2xl font-bold text-blue-600 dark:text-blue-400">TextGuardian</span>
                        <i class="fas fa-shield-alt ml-2 text-blue-600 dark:text-blue-400"></i>
                    </a>
                </div>
                
                <div class="flex-1 flex items-center justify-end space-x-4">
                    <a href="/about" class="text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white">About</a>
                    
                    <!-- <button id="theme-toggle" class="text-gray-600 hover:text-gray-900 dark:text-gray-300 dark:hover:text-white">
                        <i id="moon-icon" class="fas fa-moon"></i>
                        <i id="sun-icon" class="fas fa-sun hidden"></i>
                    </button> -->
                    

                </div>
            </div>
        </div>
    </nav>

    <!-- Main Content -->
    <main class="flex-grow container mx-auto px-4 py-8">
        <div class="max-w-3xl mx-auto">
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-lg p-6">
                <h1 class="text-2xl font-bold mb-6 text-center text-gray-800 dark:text-white">Text Content Moderation Tool</h1>
                <p class="mb-4 text-gray-600 dark:text-gray-300">Enter or paste text below to analyze for potentially inappropriate content.</p>
                
                <form id="moderation-form" action="/analyze" method="POST">
                    <div class="mb-4">
                        <textarea 
                            id="content" 
                            name="content" 
                            rows="6" 
                            class="w-full p-3 border border-gray-300 dark:border-gray-600 rounded-lg focus:ring-blue-500 focus:border-blue-500 bg-white dark:bg-gray-700 text-gray-900 dark:text-white"
                            placeholder="Type or paste text here to check..."></textarea>
                    </div>
                    
                    <!-- Loading Popup (Initially Hidden)-->
                    <div id="loadingPopup">
                        <div class="loading-box">
                            <div class="loader mx-auto mb-3"></div>
                            <p class="text-gray-700 font-semibold">Analyzing text...</p>
                        </div>
                    </div>

                    <button 
                        type="submit" 
                        class="w-full bg-blue-600 hover:bg-blue-700 text-white font-medium py-3 px-4 rounded-lg transition-colors">
                        Analyze Text
                    </button>
                </form>

                <div id="results" class="mt-6 p-4 bg-gray-50 dark:bg-gray-700 rounded-lg hidden">
                    <h2 class="text-xl font-semibold mb-3 text-gray-800 dark:text-white">Moderation Results:</h2>
                    <div id="results-content" class="text-gray-700 dark:text-gray-200">
                        <!-- Results will appear here -->
                    </div>
                    
                    <div id="warning" class="mt-4 p-3 bg-yellow-100 dark:bg-yellow-800 text-yellow-800 dark:text-yellow-100 rounded-lg hidden">
                        <p><span class="font-bold">ðŸš¨ Warning!</span> <span id="warning-message"></span></p>
                    </div>
                </div>
            </div>
        </div>
    </main>

    <!-- Footer -->
    <footer class="bg-white dark:bg-gray-800 shadow-inner py-6">
        <div class="container mx-auto px-4">
            <div class="flex flex-col md:flex-row justify-between items-center">
                <div class="mb-4 md:mb-0">
                    <p class="text-sm text-gray-600 dark:text-gray-400">Â© 2025 TextGuardian. All rights reserved.</p>
                </div>
                <div class="flex items-center space-x-4">
                    <p class="text-sm text-gray-600 dark:text-gray-400">Prabhakaran Vijay - AI Engineer & Full-stack Developer</p>
                    <a href="https://www.linkedin.com/in/prabhakaran-vijay" target="_blank" rel="noopener noreferrer" class="text-gray-600 hover:text-blue-600 dark:text-gray-400 dark:hover:text-blue-400">
                        <i class="fab fa-linkedin"></i>
                    </a>
                    <a href="https://https://github.com/PrabhakaranVijay" target="_blank" rel="noopener noreferrer" class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white">
                        <i class="fab fa-github"></i>
                    </a>
                    <a href="https://https://medium.com/@prabhakaran.vijay.17" target="_blank" rel="noopener noreferrer" class="text-gray-600 hover:text-gray-900 dark:text-gray-400 dark:hover:text-white">
                        <i class="fab fa-medium"></i>
                    </a>
                </div>
            </div>
        </div>
    </footer>

    <script>
        // Age verification
        document.getElementById('confirm-btn').addEventListener('click', function() {
            document.getElementById('age-verification').classList.add('hidden');
            localStorage.setItem('age-verified', 'true');
        });

        document.getElementById('reject-btn').addEventListener('click', function() {
            window.location.href = 'https://www.google.com';
        });

        // Check if user has already verified age
        if (localStorage.getItem('age-verified') === 'true') {
            document.getElementById('age-verification').classList.add('hidden');
        }

        // Moderation form submission
        document.getElementById('moderation-form').addEventListener('submit', function(e) {
            e.preventDefault(); // Prevent default form submission

            const loadingPopup = document.getElementById("loadingPopup");
            loadingPopup.style.display = "flex"; // Show loading popup

            const formData = new FormData(this);

            fetch('/analyze', {
                method: 'POST',
                body: new URLSearchParams(formData),
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                }
            })
            .then(response => response.json())
            .then(data => {
                loadingPopup.style.display = "none"; // Hide loading popup
                
                const resultsDiv = document.getElementById('results');
                const resultsContent = document.getElementById('results-content');
                const warningDiv = document.getElementById('warning');
                const warningMessage = document.getElementById('warning-message');

                resultsDiv.classList.remove('hidden');

                let resultHTML = '<ul class="space-y-1">';
                data.results.forEach(result => {
                    resultHTML += `<li><strong>Label: ${result.label}</strong> - Probability: ${result.probability.toFixed(2)}</li>`;
                });
                resultHTML += '</ul>';
                
                resultsContent.innerHTML = resultHTML;

                if (data.warning) {
                    warningDiv.classList.remove('hidden');
                    warningMessage.innerText = data.warning;
                } else {
                    warningDiv.classList.add('hidden');
                }
            })
            .catch(error => {
                loadingPopup.style.display = "none"; // Hide loading popup
                alert("Error processing text. Please try again.");
                console.error("Moderation error:", error);
            });
        });


        // Form submission with AJAX
        document.getElementById('moderation-form').addEventListener('submit', function(e) {
            e.preventDefault();
            
            const formData = new FormData(this);
            
            fetch('/analyze', {
                method: 'POST',
                body: new URLSearchParams(formData),
                headers: {
                    'Content-Type': 'application/x-www-form-urlencoded'
                }
            })
            .then(response => response.json())
            .then(data => {
                const resultsDiv = document.getElementById('results');
                const resultsContent = document.getElementById('results-content');
                const warningDiv = document.getElementById('warning');
                const warningMessage = document.getElementById('warning-message');
                
                // Display results
                resultsDiv.classList.remove('hidden');
                
                let resultHTML = '<ul class="space-y-1">';
                data.results.forEach(result => {
                    resultHTML += `<li><strong>Label: ${result.label}</strong> - Probability: ${result.probability}</li>`;
                });
                resultHTML += '</ul>';
                
                resultsContent.innerHTML = resultHTML;
                
                // Show warning if needed
                if (data.warning) {
                    warningDiv.classList.remove('hidden');
                    warningMessage.textContent = data.warning;
                } else {
                    warningDiv.classList.add('hidden');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                alert('An error occurred while analyzing the text.');
            });
        });

        // // Theme toggle functionality
        // document.getElementById('theme-toggle').addEventListener('click', function() {
        //     document.documentElement.classList.toggle('dark');
        //     localStorage.setItem('theme', document.documentElement.classList.contains('dark') ? 'dark' : 'light');
        // });

        // // Set theme based on user preference
        // if (localStorage.getItem('theme') === 'dark' || 
        //     (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        //     document.documentElement.classList.add('dark');
        // } else {
        //     document.documentElement.classList.remove('dark');
        // }

        // document.addEventListener('DOMContentLoaded', function () {
        //     const themeToggle = document.getElementById('theme-toggle');
        //     const moonIcon = document.getElementById('moon-icon');
        //     const sunIcon = document.getElementById('sun-icon');

        //     // Function to update UI based on theme
        //     function updateIcons() {
        //         if (document.documentElement.classList.contains('dark')) {
        //             moonIcon.classList.add('hidden');  
        //             sunIcon.classList.remove('hidden');  
        //         } else {
        //             moonIcon.classList.remove('hidden');  
        //             sunIcon.classList.add('hidden');  
        //         }
        //     }

        //     // Load theme preference
        //     if (localStorage.getItem('theme') === 'dark' || 
        //         (!localStorage.getItem('theme') && window.matchMedia('(prefers-color-scheme: dark)').matches)) {
        //         document.documentElement.classList.add('dark');
        //     } else {
        //         document.documentElement.classList.remove('dark');
        //     }

        //     // Update icons on page load
        //     updateIcons();

        //     // Toggle theme on button click
        //     themeToggle.addEventListener('click', function () {
        //         document.documentElement.classList.toggle('dark');
        //         localStorage.setItem('theme', document.documentElement.classList.contains('dark') ? 'dark' : 'light');
                
        //         // Update icons
        //         updateIcons();
        //     });
        // });
    </script>

</body>
</html>